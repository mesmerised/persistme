{"version":3,"sources":["webpack://persistme/webpack/universalModuleDefinition","webpack://persistme/webpack/bootstrap","webpack://persistme/./src/index.js","webpack://persistme/./src/settings.factory.js","webpack://persistme/./src/utils.js","webpack://persistme/./node_modules/lz-string/libs/lz-string.js","webpack://persistme/./src/storage.js"],"names":["createStorage","default","appName","defaults","TypeError","Storage","createSetting","getValue","storage","key","configs","val","get","setValue","value","set","options","Proxy","target","property","isValid","compress","LZString","decompress","_options","WeakMap","itemKey","getKey","JSON","stringify","localStorage","setItem","ex","console","warn","item","getItem","decompressedItem","parse","existingVal","Array","isArray","keys","forEach","removeItem","k"],"mappings":"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AAE;AACvH,GAAG;;AAEH;AACA;AACA;AACA,gDAAgD;;AAEhD,6CAA6C,YAAY;AACzD;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL,+CAA+C;AAC/C,0CAA0C,YAAY;AACtD;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA,GAAG;;;AAGH;AACA;AACA;AACA,oDAAoD,gCAAgC;AACpF,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,mEAAmE,yDAAyD,EAAE;AAC9H,GAAG;;AAEH;AACA,4DAA4D,aAAa;AACzE,GAAG;AACH;AACA;AACA;AACA,8BAA8B;AAC9B,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,0BAA0B;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,sBAAsB,oBAAoB;AAC1C;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,sBAAsB,oBAAoB;AAC1C;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;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","file":"persistme.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"persistme\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"persistme\"] = factory();\n\telse\n\t\troot[\"persistme\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import Storage from './storage';\n\n/**\n * Creates a namespaced storage that can be used\n * to get/set/update values in the `localStorage`.\n *\n * @example\n * const defaults = {\n *  name: 'Emad Alam',\n *  addr: {\n *   street: 'X Street',\n *   city: 'Berlin'\n *  }\n * };\n * const MyStorage = createStorage('MY_APP', defaults);\n *\n * // fallbacks on first launch\n * MyStorage.get('name'); // Emad Alam\n * MyStorage.get('addr'); // {street: 'X Street', city: 'Berlin'}\n * // set some data\n * MyStorage.set('name', 'Amina');\n * MyStorage.update('addr', {country: 'DE'});\n * // after app reload, etc\n * MyStorage.get('name'); // Amina\n * MyStorage.get('addr'); // {street: 'X Street', city: 'Berlin', country: 'DE'}\n *\n * @param {String} appName      Name of the app\n * @param {Object} [defaults]   Map of default fallback values\n */\nexport function createStorage(appName, defaults) {\n    if (typeof appName === 'undefined') {\n        throw new TypeError('`appName` is required to initialize the storage');\n    }\n    if (typeof appName !== 'string') {\n        throw new TypeError('`appName` should be a string');\n    }\n\n    return new Storage({ appName, defaults });\n}\n\n// export settings factory\nexport { default as createSetting } from './settings.factory';\n\n// export the LZString compression library\nexport { default as LZString } from 'lz-string';\n","import { isValid } from './utils';\n\n/**\n * Returns the previously stored settings.\n * If no setting is present for the given key,\n * it returns the default value.\n *\n * @param  {String} key         The settings to get\n * @param  {Object} configs     The configuration object\n * @param  {Object} defaults    The default values\n * @return {Mixed}              The settings value, or default\n */\nfunction getValue(storage, key, configs, defaults) {\n    const val = storage.get(configs[key] || key);\n    if (!isValid(val)) {\n        return defaults[key];\n    }\n    return val;\n}\n\n/**\n * Stores the given settings in the appropriate key\n *\n * @param {String} key      The settings to store\n * @param {Mixed} value     The value to store\n * @param {Object} configs  The configuration object\n */\nfunction setValue(storage, key, value, configs) {\n    storage.set(configs[key] || key, value);\n}\n\n/**\n * Factory function to create a Settings proxy object\n * with getters and setters for persistent storage.\n *\n * Note: For the proxy to work as expected, make sure to\n * create `configs` and `defaults` objects with exact\n * keys to be able to return fallback values.\n *\n * @example\n * const storage = createStorage('myapp');\n * const configs = {\n *     showSomething: 'mymodule.show.something',\n *     showSomethingElse: 'mymodule.show.somethingelse',\n * };\n * const defaults = {\n *     showSomething: true,\n *     showSomethingElse: false,\n * };\n * const UserSettings = createSetting({storage, defaults, configs});\n *\n * UserSettings.showSomething // true\n * UserSettings.showSomethingElse // false\n * // set some settings\n * UserSettings.showSomethingElse = true;\n * // after app reload, etc\n * UserSettings.showSomethingElse // true\n *\n * @param  {Object} options.storage     The storage object that implements get/set\n * @param  {Object} options.defaults    Map of setting names and corresponding default values\n * @param  {Object} options.configs     Map of setting names and corresponding storage key\n * @return {Object}                     The settings proxy\n */\nexport default function createSetting(options = {}) {\n    const { storage = {}, defaults = {}, configs = {} } = options;\n\n    if (typeof storage.get !== 'function'\n        || typeof storage.set !== 'function') {\n        throw new TypeError('storage object should implement `get` and `set` methods.');\n    }\n\n    return new Proxy({}, {\n        get(target, property) {\n            return getValue(storage, property, configs, defaults);\n        },\n        set(target, property, value) {\n            setValue(storage, property, value, configs);\n            return true;\n        },\n    });\n}\n","/* eslint-disable import/prefer-default-export */\n\nexport const isValid = val => ((typeof val !== 'undefined') && val !== null);\n","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.4\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n}\n","import LZString from 'lz-string';\nimport { isValid } from './utils';\n\nconst { compress, decompress } = LZString;\n\nconst _options = new WeakMap(); // eslint-disable-line no-underscore-dangle\n\nexport default class Storage {\n    /**\n     * @constructor\n     * @param {String} options.appName      Name of the application\n     * @param {Object} options.defaults     Map of default values, if any\n     */\n    constructor(options = {}) {\n        _options.set(this, options);\n    }\n\n    /**\n     * Returns the final key used for storing the\n     * value in the `localStorage`.\n     *\n     * @param  {String} key     Storage key\n     * @return {String} The generated key name for the app\n     */\n    getKey(key) {\n        const { appName } = _options.get(this);\n        return `${appName}.${key}`;\n    }\n\n    /**\n     * Sets a given key and value in the `localStorage`.\n     * Uses lz-string compression before storage.\n     *\n     * @param {String} key  Storage key\n     * @param {Mixed} val   Value to store\n     */\n    set(key, value) {\n        const itemKey = this.getKey(key);\n        try {\n            const val = JSON.stringify(value);\n            if (typeof val !== 'undefined') {\n                localStorage.setItem(itemKey, compress(val));\n            }\n        } catch (ex) {\n            console.warn(`something went wrong while trying to store value for ${key}.`, ex); // eslint-disable-line no-console\n        }\n    }\n\n    /**\n     * Retrieves the value from the `localStorage`.\n     * Assumes that provided `set` method of the storage\n     * was used to begin with, as the value is decompressed\n     * using the lz-string compression.\n     *\n     * @param {String} key  Storage key\n     * @return {Mixed}      Stored Value\n     */\n    get(key) {\n        const itemKey = this.getKey(key);\n        const item = localStorage.getItem(itemKey);\n\n        // return default value\n        if (!isValid(item)) {\n            const { defaults = {} } = _options.get(this);\n            return defaults[key];\n        }\n\n        const decompressedItem = decompress(item);\n        let val;\n\n        try {\n            val = JSON.parse(decompressedItem);\n        } catch (ex) {\n            val = decompressedItem;\n        }\n\n        return val;\n    }\n\n    /**\n     * Similar to `set` method, but extends (shallow merges) the\n     * original stored value if it is of type array or object.\n     *\n     * Note: The type of both stored as well as provided value\n     * should match in order for the update to work. Also\n     * the value should exist initially, otherwise the\n     * behavior is equivalent to `set` method.\n     *\n     * @param {String} key  Storage key\n     * @param {Mixed} value   Value to update\n     */\n    update(key, value) {\n        const existingVal = this.get(key);\n\n        // not present yet in storage, store\n        if (!isValid(existingVal)) {\n            this.set(key, value);\n        } else if (Array.isArray(existingVal)\n            && Array.isArray(value)) {\n            // is an array, extend original and set\n            this.set(key, [...existingVal, ...value]);\n        } else if (typeof existingVal === 'object'\n            && typeof value === 'object') {\n            // is an object, extend original and set\n            this.set(key, { ...existingVal, ...value });\n        } else {\n            // incompatible or other primitive values, use normal set\n            this.set(key, value);\n        }\n    }\n\n    /**\n     * Removes the given key(s) from the storage.\n     *\n     * @param  {String|Array<String>} keys  Key(s) to remove from storage\n     */\n    remove(keys) {\n        if (!Array.isArray(keys)) keys = [keys]; // eslint-disable-line no-param-reassign\n        keys.forEach(k => localStorage.removeItem(this.getKey(k)));\n    }\n}\n"],"sourceRoot":""}