{"version":3,"sources":["webpack://persistme/webpack/universalModuleDefinition","webpack://persistme/webpack/bootstrap","webpack://persistme/./node_modules/lz-string/libs/lz-string.js","webpack://persistme/./src/utils.js","webpack://persistme/./src/storage.js","webpack://persistme/./src/settings.factory.js","webpack://persistme/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_RESULT__","LZString","f","String","fromCharCode","keyStrBase64","keyStrUriSafe","baseReverseDic","getBaseValue","alphabet","character","length","charAt","compressToBase64","input","res","_compress","a","decompressFromBase64","_decompress","index","compressToUTF16","decompressFromUTF16","compressed","charCodeAt","compressToUint8Array","uncompressed","compress","buf","Uint8Array","TotalLen","current_value","decompressFromUint8Array","undefined","decompress","Array","result","forEach","push","join","compressToEncodedURIComponent","decompressFromEncodedURIComponent","replace","bitsPerChar","getCharFromInt","ii","context_dictionary","context_dictionaryToCreate","context_c","context_wc","context_w","context_enlargeIn","context_dictSize","context_numBits","context_data","context_data_val","context_data_position","Math","pow","resetValue","getNextValue","w","bits","resb","maxpower","power","dictionary","enlargeIn","dictSize","numBits","entry","data","val","position","isValid","_lzString","_utils","_options","WeakMap","Storage","options","arguments","_classCallCheck","this","set","key","appName","itemKey","getKey","JSON","stringify","localStorage","setItem","ex","console","warn","item","getItem","_options$get2$default","defaults","decompressedItem","parse","existingVal","isArray","concat","_toConsumableArray","_typeof","_extends","keys","_this","k","removeItem","_options$storage","storage","_options$defaults","_options$configs","configs","TypeError","Proxy","target","getValue","setValue","createStorage","default"],"mappings":"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","file":"persistme.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"persistme\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"persistme\"] = factory();\n\telse\n\t\troot[\"persistme\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.4\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n}\n","/* eslint-disable import/prefer-default-export */\n\nexport const isValid = val => ((typeof val !== 'undefined') && val !== null);\n","import LZString from 'lz-string';\nimport { isValid } from './utils';\n\nconst { compress, decompress } = LZString;\n\nconst _options = new WeakMap(); // eslint-disable-line no-underscore-dangle\n\nexport default class Storage {\n    /**\n     * @constructor\n     * @param {String} options.appName      Name of the application\n     * @param {Object} options.defaults     Map of default values, if any\n     */\n    constructor(options = {}) {\n        _options.set(this, options);\n    }\n\n    /**\n     * Returns the final key used for storing the\n     * value in the `localStorage`.\n     *\n     * @param  {String} key     Storage key\n     * @return {String} The generated key name for the app\n     */\n    getKey(key) {\n        const { appName } = _options.get(this);\n        return `${appName}.${key}`;\n    }\n\n    /**\n     * Sets a given key and value in the `localStorage`.\n     * Uses lz-string compression before storage.\n     *\n     * @param {String} key  Storage key\n     * @param {Mixed} val   Value to store\n     */\n    set(key, value) {\n        const itemKey = this.getKey(key);\n        try {\n            const val = JSON.stringify(value);\n            if (typeof val !== 'undefined') {\n                localStorage.setItem(itemKey, compress(val));\n            }\n        } catch (ex) {\n            console.warn(`something went wrong while trying to store value for ${key}.`, ex); // eslint-disable-line no-console\n        }\n    }\n\n    /**\n     * Retrieves the value from the `localStorage`.\n     * Assumes that provided `set` method of the storage\n     * was used to begin with, as the value is decompressed\n     * using the lz-string compression.\n     *\n     * @param {String} key  Storage key\n     * @return {Mixed}      Stored Value\n     */\n    get(key) {\n        const itemKey = this.getKey(key);\n        const item = localStorage.getItem(itemKey);\n\n        // return default value\n        if (!isValid(item)) {\n            const { defaults = {} } = _options.get(this);\n            return defaults[key];\n        }\n\n        const decompressedItem = decompress(item);\n        let val;\n\n        try {\n            val = JSON.parse(decompressedItem);\n        } catch (ex) {\n            val = decompressedItem;\n        }\n\n        return val;\n    }\n\n    /**\n     * Similar to `set` method, but extends (shallow merges) the\n     * original stored value if it is of type array or object.\n     *\n     * Note: The type of both stored as well as provided value\n     * should match in order for the update to work. Also\n     * the value should exist initially, otherwise the\n     * behavior is equivalent to `set` method.\n     *\n     * @param {String} key  Storage key\n     * @param {Mixed} value   Value to update\n     */\n    update(key, value) {\n        const existingVal = this.get(key);\n\n        // not present yet in storage, store\n        if (!isValid(existingVal)) {\n            this.set(key, value);\n        } else if (Array.isArray(existingVal)\n            && Array.isArray(value)) {\n            // is an array, extend original and set\n            this.set(key, [...existingVal, ...value]);\n        } else if (typeof existingVal === 'object'\n            && typeof value === 'object') {\n            // is an object, extend original and set\n            this.set(key, { ...existingVal, ...value });\n        } else {\n            // incompatible or other primitive values, use normal set\n            this.set(key, value);\n        }\n    }\n\n    /**\n     * Removes the given key(s) from the storage.\n     *\n     * @param  {String|Array<String>} keys  Key(s) to remove from storage\n     */\n    remove(keys) {\n        if (!Array.isArray(keys)) keys = [keys]; // eslint-disable-line no-param-reassign\n        keys.forEach(k => localStorage.removeItem(this.getKey(k)));\n    }\n}\n","import { isValid } from './utils';\n\n/**\n * Returns the previously stored settings.\n * If no setting is present for the given key,\n * it returns the default value.\n *\n * @param  {String} key         The settings to get\n * @param  {Object} configs     The configuration object\n * @param  {Object} defaults    The default values\n * @return {Mixed}              The settings value, or default\n */\nfunction getValue(storage, key, configs, defaults) {\n    const val = storage.get(configs[key] || key);\n    if (!isValid(val)) {\n        return defaults[key];\n    }\n    return val;\n}\n\n/**\n * Stores the given settings in the appropriate key\n *\n * @param {String} key      The settings to store\n * @param {Mixed} value     The value to store\n * @param {Object} configs  The configuration object\n */\nfunction setValue(storage, key, value, configs) {\n    storage.set(configs[key] || key, value);\n}\n\n/**\n * Factory function to create a Settings proxy object\n * with getters and setters for persistent storage.\n *\n * Note: For the proxy to work as expected, make sure to\n * create `configs` and `defaults` objects with exact\n * keys to be able to return fallback values.\n *\n * @example\n * const storage = createStorage('myapp');\n * const configs = {\n *     showSomething: 'mymodule.show.something',\n *     showSomethingElse: 'mymodule.show.somethingelse',\n * };\n * const defaults = {\n *     showSomething: true,\n *     showSomethingElse: false,\n * };\n * const UserSettings = createSetting({storage, defaults, configs});\n *\n * UserSettings.showSomething // true\n * UserSettings.showSomethingElse // false\n * // set some settings\n * UserSettings.showSomethingElse = true;\n * // after app reload, etc\n * UserSettings.showSomethingElse // true\n *\n * @param  {Object} options.storage     The storage object that implements get/set\n * @param  {Object} options.defaults    Map of setting names and corresponding default values\n * @param  {Object} options.configs     Map of setting names and corresponding storage key\n * @return {Object}                     The settings proxy\n */\nexport default function createSetting(options = {}) {\n    const { storage = {}, defaults = {}, configs = {} } = options;\n\n    if (typeof storage.get !== 'function'\n        || typeof storage.set !== 'function') {\n        throw new TypeError('storage object should implement `get` and `set` methods.');\n    }\n\n    return new Proxy({}, {\n        get(target, property) {\n            return getValue(storage, property, configs, defaults);\n        },\n        set(target, property, value) {\n            setValue(storage, property, value, configs);\n            return true;\n        },\n    });\n}\n","import Storage from './storage';\n\n/**\n * Creates a namespaced storage that can be used\n * to get/set/update values in the `localStorage`.\n *\n * @example\n * const defaults = {\n *  name: 'Emad Alam',\n *  addr: {\n *   street: 'X Street',\n *   city: 'Berlin'\n *  }\n * };\n * const MyStorage = createStorage('MY_APP', defaults);\n *\n * // fallbacks on first launch\n * MyStorage.get('name'); // Emad Alam\n * MyStorage.get('addr'); // {street: 'X Street', city: 'Berlin'}\n * // set some data\n * MyStorage.set('name', 'Amina');\n * MyStorage.update('addr', {country: 'DE'});\n * // after app reload, etc\n * MyStorage.get('name'); // Amina\n * MyStorage.get('addr'); // {street: 'X Street', city: 'Berlin', country: 'DE'}\n *\n * @param {String} appName      Name of the app\n * @param {Object} [defaults]   Map of default fallback values\n */\nexport function createStorage(appName, defaults) {\n    if (typeof appName === 'undefined') {\n        throw new TypeError('`appName` is required to initialize the storage');\n    }\n    if (typeof appName !== 'string') {\n        throw new TypeError('`appName` should be a string');\n    }\n\n    return new Storage({ appName, defaults });\n}\n\n// export settings factory\nexport { default as createSetting } from './settings.factory';\n\n// export the LZString compression library\nexport { default as LZString } from 'lz-string';\n"],"sourceRoot":""}